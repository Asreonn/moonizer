/* Data Explorer Panel - Comprehensive Redesign */
.dataExplorer {
  height: 100%;
  display: flex;
  flex-direction: column;
  background: var(--color-bg-secondary);
  font-family: var(--font-family-primary);
  overflow-y: auto;
  overflow-x: hidden;
}

/* Empty State */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  max-width: 400px;
  width: 100%;
  height: 100%;
  margin: auto;
  background: linear-gradient(135deg, 
    rgba(15, 15, 35, 0.6) 0%,
    rgba(25, 25, 45, 0.4) 50%,
    rgba(20, 20, 40, 0.6) 100%);
  border: 1px solid rgba(139, 92, 246, 0.1);
  border-radius: var(--border-radius-lg);
  padding: var(--space-xl);
  backdrop-filter: blur(10px);
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.3),
    0 2px 8px rgba(139, 92, 246, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
  animation: fadeInUp 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.emptyIcon {
  width: 64px;
  height: 64px;
  margin-bottom: var(--space-lg);
  color: var(--color-accent-primary);
  opacity: 0.8;
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-8px);
  }
}

.emptyIcon svg {
  width: 100%;
  height: 100%;
}

.emptyTitle {
  color: var(--color-text-primary);
  font-family: var(--font-family-primary);
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  margin: 0 0 var(--space-sm) 0;
  background: linear-gradient(135deg, 
    var(--color-text-primary) 0%,
    var(--color-accent-primary) 100%);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.emptyDescription {
  color: var(--color-text-secondary);
  font-family: var(--font-family-primary);
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-regular);
  line-height: 1.5;
  margin: 0;
  opacity: 0.8;
}

/* Loading State */
.loadingState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  color: var(--color-text-secondary);
}

.loadingIcon {
  width: 32px;
  height: 32px;
  margin-bottom: var(--space-md);
  color: var(--color-accent-primary);
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.loadingIcon svg {
  width: 100%;
  height: 100%;
}

/* Main Explorer Content */
.explorerContent {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
  padding: var(--space-md);
}

/* Chart Container - Fixed height at top */
.chartContainer {
  flex: 0 0 auto;
  min-height: 400px;
  max-height: 60vh;
  background: linear-gradient(145deg, 
    rgba(30, 30, 50, 0.95) 0%,
    rgba(20, 20, 40, 0.9) 100%);
  border: 2px solid transparent;
  border-radius: var(--border-radius-lg);
  backdrop-filter: blur(20px);
  overflow: hidden;
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.3),
    0 2px 8px rgba(139, 92, 246, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
  position: relative;
  display: flex;
  flex-direction: column;
}

/* Chart Header */
.chartHeader {
  padding: var(--space-md);
  border-bottom: 1px solid rgba(139, 92, 246, 0.2);
  background: rgba(255, 255, 255, 0.02);
  position: relative;
  z-index: 1;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

.chartTitle h3 {
  color: var(--color-text-primary);
  font-family: var(--font-family-primary);
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  margin: 0 0 var(--space-sm) 0;
  background: linear-gradient(135deg, 
    var(--color-text-primary) 0%,
    var(--color-accent-primary) 100%);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.columnInfo {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  flex-wrap: wrap;
}

.columnName {
  color: var(--color-accent-primary);
  font-family: var(--font-family-mono);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  padding: var(--space-xs) var(--space-sm);
  background: rgba(139, 92, 246, 0.1);
  border: 1px solid rgba(139, 92, 246, 0.2);
  border-radius: var(--border-radius-md);
  backdrop-filter: blur(5px);
}

.typeChip {
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-medium);
  padding: var(--space-xs) var(--space-sm);
  border-radius: var(--border-radius-md);
  border: 1px solid;
  color: white;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
}

/* Type-specific colors */
.typeChip.numeric {
  background: var(--type-numeric);
  border-color: var(--type-numeric);
}

.typeChip.categorical {
  background: var(--type-categorical);
  border-color: var(--type-categorical);
}

.typeChip.boolean {
  background: var(--type-boolean);
  border-color: var(--type-boolean);
}

.typeChip.datetime {
  background: var(--type-datetime);
  border-color: var(--type-datetime);
}

.typeChip.text {
  background: var(--type-text);
  border-color: var(--type-text);
}

.typeChip.id_unique {
  background: var(--type-id-unique);
  border-color: var(--type-id-unique);
}

.typeChip.constant {
  background: var(--type-constant);
  border-color: var(--type-constant);
}

/* Chart Settings */
.chartSettings {
  position: relative;
  z-index: 10;
}

.settingsButton {
  width: 32px;
  height: 32px;
  background: rgba(139, 92, 246, 0.1);
  border: 1px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-md);
  color: var(--color-accent-primary);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.settingsButton:hover {
  background: rgba(139, 92, 246, 0.2);
  border-color: rgba(139, 92, 246, 0.5);
  transform: scale(1.05);
}

.settingsButton.active {
  background: var(--color-accent-primary);
  color: white;
}

.settingsButton svg {
  width: 16px;
  height: 16px;
}

.settingsPanel {
  position: absolute;
  top: calc(100% + 8px);
  right: 0;
  background: linear-gradient(145deg, 
    rgba(30, 30, 50, 0.98) 0%,
    rgba(20, 20, 40, 0.95) 100%);
  border: 2px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-lg);
  padding: var(--space-md);
  backdrop-filter: blur(20px);
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.4),
    0 2px 8px rgba(139, 92, 246, 0.2);
  min-width: 200px;
  z-index: 100;
}

.settingGroup {
  margin-bottom: var(--space-md);
}

.settingGroup:last-child {
  margin-bottom: 0;
}

.settingGroup label {
  display: block;
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  margin-bottom: var(--space-xs);
}

.buttonGroup {
  display: flex;
  gap: var(--space-xs);
  flex-wrap: wrap;
}

.buttonGroup button {
  padding: var(--space-xs) var(--space-sm);
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-medium);
  border: 1px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-md);
  background: rgba(139, 92, 246, 0.05);
  color: var(--color-text-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
}

.buttonGroup button:hover {
  background: rgba(139, 92, 246, 0.15);
  border-color: rgba(139, 92, 246, 0.5);
  color: var(--color-text-primary);
}

.buttonGroup button.active {
  background: var(--color-accent-primary);
  border-color: var(--color-accent-primary);
  color: white;
}

/* Modern Button Grid for Chart Types */
.buttonGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: var(--space-xs);
  margin-top: var(--space-xs);
}

.buttonGrid button {
  padding: var(--space-sm) var(--space-md);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  border: 1.5px solid rgba(139, 92, 246, 0.2);
  border-radius: var(--border-radius-lg);
  background: rgba(139, 92, 246, 0.03);
  color: var(--color-text-secondary);
  cursor: pointer;
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.buttonGrid button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(139, 92, 246, 0.1), transparent);
  transition: left 0.5s ease;
}

.buttonGrid button:hover::before {
  left: 100%;
}

.buttonGrid button:hover {
  background: rgba(139, 92, 246, 0.08);
  border-color: rgba(139, 92, 246, 0.4);
  color: var(--color-text-primary);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(139, 92, 246, 0.15);
}

.buttonGrid button.active {
  background: linear-gradient(135deg, var(--color-accent-primary), rgba(139, 92, 246, 0.8));
  border-color: var(--color-accent-primary);
  color: white;
  transform: translateY(-1px);
  box-shadow: 0 4px 16px rgba(139, 92, 246, 0.3);
}

/* Checkbox Group Styling */
.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
}

.checkbox {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  cursor: pointer;
  transition: color 0.2s ease;
}

.checkbox:hover {
  color: var(--color-text-primary);
}

.checkbox input[type="checkbox"] {
  width: 18px;
  height: 18px;
  appearance: none;
  border: 2px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-sm);
  background: rgba(139, 92, 246, 0.05);
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
}

.checkbox input[type="checkbox"]:checked {
  background: var(--color-accent-primary);
  border-color: var(--color-accent-primary);
}

.checkbox input[type="checkbox"]:checked::after {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: var(--font-size-xs);
  font-weight: bold;
}

/* Chart Wrapper Labels */
.chartWrapper {
  display: flex;
  flex-direction: column;
  flex: 1;
  min-height: 0;
}

.chartLabel {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-secondary);
  margin-bottom: var(--space-xs);
  padding: 0 var(--space-sm);
  text-align: center;
  position: relative;
}

.chartLabel::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 50%;
  transform: translateX(-50%);
  width: 40px;
  height: 2px;
  background: linear-gradient(90deg, transparent, var(--color-accent-primary), transparent);
  opacity: 0.6;
}

/* Compact Controls - Single Line */
.compactControls {
  background: linear-gradient(145deg, 
    rgba(30, 30, 50, 0.8) 0%,
    rgba(20, 20, 40, 0.7) 100%);
  border: 1px solid rgba(139, 92, 246, 0.15);
  border-radius: var(--border-radius-md);
  margin-bottom: var(--space-sm);
  backdrop-filter: blur(10px);
  padding: var(--space-sm) var(--space-md);
}

.controlsRow {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  flex-wrap: wrap;
  justify-content: space-between;
}


.leftControls {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  flex-wrap: wrap;
}

.rightControls {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
}

.exportButton {
  min-width: 80px;
  height: 32px;
  background: linear-gradient(145deg, rgba(139, 92, 246, 0.1), rgba(139, 92, 246, 0.05));
  border: 1.5px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-md);
  color: var(--color-accent-primary);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  padding: 0 var(--space-sm);
}

.exportButton::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(45deg, transparent 30%, rgba(139, 92, 246, 0.1), transparent 70%);
  transform: translateX(-100%);
  transition: transform 0.6s ease;
}

.exportButton:hover::before {
  transform: translateX(100%);
}

.exportButton:hover {
  background: linear-gradient(145deg, rgba(139, 92, 246, 0.2), rgba(139, 92, 246, 0.1));
  border-color: rgba(139, 92, 246, 0.5);
  color: var(--color-text-primary);
  transform: translateY(-1px) scale(1.05);
  box-shadow: 0 4px 16px rgba(139, 92, 246, 0.2);
}

.exportButton:active {
  transform: translateY(0) scale(0.95);
}

.exportButton.exporting {
  background: var(--color-accent-primary);
  color: white;
  animation: exportPulse 1s ease-in-out infinite;
}

@keyframes exportPulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.02);
  }
}

.exportButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

/* Dedicated Export Button - Different styling for background rendering */
.dedicatedExport {
  background: linear-gradient(145deg, rgba(16, 185, 129, 0.1), rgba(16, 185, 129, 0.05)) !important;
  border-color: rgba(16, 185, 129, 0.3) !important;
  color: rgba(16, 185, 129, 0.9) !important;
}

.dedicatedExport::before {
  background: linear-gradient(45deg, transparent 30%, rgba(16, 185, 129, 0.1), transparent 70%) !important;
}

.dedicatedExport:hover {
  background: linear-gradient(145deg, rgba(16, 185, 129, 0.2), rgba(16, 185, 129, 0.1)) !important;
  border-color: rgba(16, 185, 129, 0.5) !important;
  color: rgba(16, 185, 129, 1) !important;
  box-shadow: 0 4px 16px rgba(16, 185, 129, 0.2) !important;
}

.dedicatedExport.exporting {
  background: rgb(16, 185, 129) !important;
  color: white !important;
}

/* Right controls layout - space for two buttons */
.rightControls {
  display: flex;
  align-items: center;
  gap: 8px;
}

.layoutButtons {
  display: flex;
  gap: 2px;
  background: rgba(139, 92, 246, 0.05);
  border-radius: var(--border-radius-sm);
  padding: 2px;
  align-items: center;
}

.layoutBtn {
  padding: var(--space-xs) var(--space-sm);
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-medium);
  background: transparent;
  border: none;
  border-radius: var(--border-radius-sm);
  color: var(--color-text-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
  white-space: nowrap;
}

.layoutBtn:hover {
  background: rgba(139, 92, 246, 0.1);
  color: var(--color-text-primary);
}

.layoutBtn.active {
  background: var(--color-accent-primary);
  color: white;
}


.compactSelect {
  padding: var(--space-xs) var(--space-sm);
  border: var(--border-width) solid var(--color-border);
  border-radius: var(--border-radius);
  background-color: var(--color-bg-tertiary);
  color: var(--color-text-primary);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-normal);
  cursor: pointer;
  transition: all var(--transition-fast);
  min-width: 100px;
}

.compactSelect:hover {
  border-color: var(--color-accent-primary);
  box-shadow: var(--glow-primary);
}

.compactSelect:focus {
  outline: none;
  border-color: var(--color-accent-primary);
  box-shadow: var(--glow-primary);
}

.compactCheckboxes {
  display: flex;
  gap: var(--space-sm);
}

.compactCheckbox {
  display: flex;
  align-items: center;
  gap: 4px;
  font-size: var(--font-size-xs);
  color: var(--color-text-secondary);
  cursor: pointer;
}

.compactCheckbox input[type="checkbox"] {
  width: 14px;
  height: 14px;
  appearance: none;
  background: rgba(139, 92, 246, 0.1);
  border: 1px solid rgba(139, 92, 246, 0.3);
  border-radius: 2px;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
}

.compactCheckbox input[type="checkbox"]:checked {
  background: var(--color-accent-primary);
  border-color: var(--color-accent-primary);
}

.compactCheckbox input[type="checkbox"]:checked::after {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 10px;
  font-weight: bold;
}

.controlsHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--space-md);
  border-bottom: 1px solid rgba(139, 92, 246, 0.2);
}

.controlsActions {
  display: flex;
  gap: var(--space-xs);
}

.layoutToggle {
  width: 36px;
  height: 36px;
  background: rgba(139, 92, 246, 0.05);
  border: 1.5px solid rgba(139, 92, 246, 0.2);
  border-radius: var(--border-radius-md);
  color: var(--color-text-secondary);
  cursor: pointer;
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-bold);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.layoutToggle::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(45deg, transparent 30%, rgba(139, 92, 246, 0.1), transparent 70%);
  transform: translateX(-100%);
  transition: transform 0.6s ease;
}

.layoutToggle:hover::before {
  transform: translateX(100%);
}

.layoutToggle:hover {
  background: rgba(139, 92, 246, 0.15);
  border-color: rgba(139, 92, 246, 0.4);
  color: var(--color-text-primary);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(139, 92, 246, 0.2);
}

.layoutToggle.active {
  background: linear-gradient(135deg, var(--color-accent-primary), rgba(139, 92, 246, 0.8));
  border-color: var(--color-accent-primary);
  color: white;
  transform: translateY(-2px);
  box-shadow: 0 6px 16px rgba(139, 92, 246, 0.4);
}

.controlsMain {
  padding: var(--space-md);
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-md);
  align-items: flex-end;
}

.chartTypeGroup {
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
  min-width: 160px;
}

.controlLabel {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.premiumSelect {
  padding: var(--space-sm) var(--space-md);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  background: linear-gradient(145deg, rgba(139, 92, 246, 0.08), rgba(139, 92, 246, 0.05));
  border: 2px solid rgba(139, 92, 246, 0.2);
  border-radius: var(--border-radius-lg);
  color: var(--color-text-primary);
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  appearance: none;
  background-image: 
    linear-gradient(45deg, transparent 50%, rgba(139, 92, 246, 0.8) 50%),
    linear-gradient(135deg, rgba(139, 92, 246, 0.8) 50%, transparent 50%);
  background-position: right 12px center;
  background-size: 8px 8px;
  background-repeat: no-repeat;
  padding-right: var(--space-xl);
}

.premiumSelect:hover {
  background: linear-gradient(145deg, rgba(139, 92, 246, 0.15), rgba(139, 92, 246, 0.1));
  border-color: rgba(139, 92, 246, 0.4);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(139, 92, 246, 0.15);
}

.premiumSelect:focus {
  outline: none;
  border-color: var(--color-accent-primary);
  box-shadow: 0 0 0 4px rgba(139, 92, 246, 0.15);
}

.dualControls {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-md);
  align-items: flex-end;
  padding-left: var(--space-md);
  border-left: 2px solid rgba(139, 92, 246, 0.2);
}

.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
  min-width: 120px;
}

.checkboxLabel {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-secondary);
  cursor: pointer;
  transition: color 0.2s ease;
}

.checkboxLabel:hover {
  color: var(--color-text-primary);
}

.checkboxLabel input[type="checkbox"] {
  width: 18px;
  height: 18px;
  appearance: none;
  background: rgba(139, 92, 246, 0.1);
  border: 2px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
}

.checkboxLabel input[type="checkbox"]:checked {
  background: var(--color-accent-primary);
  border-color: var(--color-accent-primary);
}

.checkboxLabel input[type="checkbox"]:checked::after {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: var(--font-size-xs);
  font-weight: bold;
}

.settingsRow {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--space-md);
}

.chartControls {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
}

.chartSelect {
  padding: var(--space-xs) var(--space-sm);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  background: rgba(139, 92, 246, 0.05);
  border: 1.5px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-md);
  color: var(--color-text-primary);
  cursor: pointer;
  min-width: 160px;
  transition: all 0.2s ease;
}

.chartSelect:hover {
  background: rgba(139, 92, 246, 0.1);
  border-color: rgba(139, 92, 246, 0.5);
}

.chartSelect:focus {
  outline: none;
  border-color: var(--color-accent-primary);
  box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
}

/* Advanced Settings Button */
.advancedSettingsButton {
  width: 32px;
  height: 32px;
  background: rgba(139, 92, 246, 0.1);
  border: 1.5px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-md);
  color: var(--color-accent-primary);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  font-size: var(--font-size-md);
}

.advancedSettingsButton:hover {
  background: rgba(139, 92, 246, 0.2);
  border-color: rgba(139, 92, 246, 0.5);
  transform: scale(1.05);
}

.advancedSettingsButton.active {
  background: var(--color-accent-primary);
  color: white;
}

/* Advanced Settings Panel */
.advancedSettings {
  position: absolute;
  top: 100%;
  right: 0;
  margin-top: var(--space-xs);
  background: linear-gradient(145deg, 
    rgba(30, 30, 50, 0.98) 0%,
    rgba(20, 20, 40, 0.95) 100%);
  border: 2px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-lg);
  padding: var(--space-md);
  backdrop-filter: blur(20px);
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.4),
    0 2px 8px rgba(139, 92, 246, 0.2);
  min-width: 250px;
  z-index: 100;
}

.advancedSettings .settingRow {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-sm);
  gap: var(--space-sm);
}

.advancedSettings .settingRow:last-child {
  margin-bottom: 0;
}

.advancedSettings label {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-primary);
  display: flex;
  align-items: center;
  gap: var(--space-xs);
}

.toggleGroup {
  display: flex;
  gap: var(--space-xs);
}

.toggleGroup button {
  padding: var(--space-xs) var(--space-sm);
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-medium);
  border: 1px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-sm);
  background: rgba(139, 92, 246, 0.05);
  color: var(--color-text-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
}

.toggleGroup button:hover {
  background: rgba(139, 92, 246, 0.15);
  border-color: rgba(139, 92, 246, 0.5);
  color: var(--color-text-primary);
}

.toggleGroup button.active {
  background: var(--color-accent-primary);
  border-color: var(--color-accent-primary);
  color: white;
}

.miniSelect {
  padding: var(--space-xs) var(--space-sm);
  font-size: var(--font-size-xs);
  background: rgba(139, 92, 246, 0.05);
  border: 1px solid rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-sm);
  color: var(--color-text-primary);
  cursor: pointer;
  min-width: 100px;
}

.miniSelect:focus {
  outline: none;
  border-color: var(--color-accent-primary);
}

/* Quick Stats Section */
.quickStatsSection {
  background: linear-gradient(145deg, 
    rgba(30, 30, 50, 0.85) 0%,
    rgba(20, 20, 40, 0.8) 100%);
  border: 1px solid rgba(139, 92, 246, 0.15);
  border-radius: var(--border-radius-lg);
  padding: var(--space-md);
  margin-bottom: var(--space-sm);
  backdrop-filter: blur(15px);
}

.quickStatsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  gap: var(--space-md);
}

/* Individual stat items styling */
:global(.stat-item) {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: var(--space-sm);
  background: rgba(139, 92, 246, 0.05);
  border: 1px solid rgba(139, 92, 246, 0.1);
  border-radius: var(--border-radius-md);
  transition: all 0.2s ease;
}

:global(.stat-item):hover {
  background: rgba(139, 92, 246, 0.1);
  border-color: rgba(139, 92, 246, 0.2);
  transform: translateY(-1px);
}

:global(.stat-label) {
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-secondary);
  margin-bottom: var(--space-xs);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

:global(.stat-value) {
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  font-family: var(--font-family-mono);
}

/* Chart Area Layouts */
.chartArea {
  flex: 1;
  min-height: 0;
  display: flex;
  gap: var(--space-sm);
}

.singleLayout {
  flex-direction: column;
}

.dualLayout {
  display: flex;
  flex-direction: row;
  gap: var(--space-md);
  height: 400px;
}

.leftChart,
.rightChart {
  flex: 1;
  display: flex;
  flex-direction: column;
  background: rgba(30, 30, 50, 0.3);
  border: 1px solid rgba(139, 92, 246, 0.1);
  border-radius: var(--border-radius-lg);
  padding: var(--space-sm);
}

.leftChart .chartTitle,
.rightChart .chartTitle {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-secondary);
  text-align: center;
  margin-bottom: var(--space-xs);
  padding-bottom: var(--space-xs);
  border-bottom: 1px solid rgba(139, 92, 246, 0.1);
}

.dualLayout .chart {
  flex: 1;
  min-height: 0;
}

.comparisonLayout {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: var(--space-sm);
}

.comparisonLayout .chartWrapper {
  display: flex;
  flex-direction: column;
}

.comparisonLayout .chart {
  flex: 1;
  min-height: 200px;
}

.chart {
  flex: 1;
  min-height: 0;
}

.secondaryChart {
  border-left: 2px solid rgba(139, 92, 246, 0.2);
  padding-left: var(--space-sm);
}

.chartContainer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    135deg,
    rgba(139, 92, 246, 0.1) 0%,
    rgba(6, 182, 212, 0.05) 30%,
    rgba(245, 158, 11, 0.05) 60%,
    rgba(236, 72, 153, 0.1) 100%
  );
  border-radius: var(--border-radius-lg);
  pointer-events: none;
}

/* Analysis Container - Flexible scrollable area below */
.analysisContainer {
  flex: 0 0 auto;
  min-height: 400px;
  background: linear-gradient(145deg, 
    rgba(30, 30, 50, 0.95) 0%,
    rgba(20, 20, 40, 0.9) 100%);
  border: 2px solid transparent;
  border-radius: var(--border-radius-lg);
  backdrop-filter: blur(20px);
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.3),
    0 2px 8px rgba(139, 92, 246, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
  position: relative;
  margin-bottom: var(--space-lg);
}

.analysisContainer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    135deg,
    rgba(139, 92, 246, 0.1) 0%,
    rgba(6, 182, 212, 0.05) 30%,
    rgba(245, 158, 11, 0.05) 60%,
    rgba(236, 72, 153, 0.1) 100%
  );
  border-radius: var(--border-radius-lg);
  pointer-events: none;
}

/* Custom scrollbar for analysis container */
.analysisContainer::-webkit-scrollbar {
  width: 8px;
}

.analysisContainer::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.05);
  border-radius: var(--border-radius-sm);
}

.analysisContainer::-webkit-scrollbar-thumb {
  background: rgba(139, 92, 246, 0.3);
  border-radius: var(--border-radius-sm);
}

.analysisContainer::-webkit-scrollbar-thumb:hover {
  background: rgba(139, 92, 246, 0.5);
}

/* Hover Effects */
.chartContainer:hover,
.analysisContainer:hover {
  border-color: rgba(139, 92, 246, 0.2);
  box-shadow: 
    0 12px 40px rgba(0, 0, 0, 0.4),
    0 4px 12px rgba(139, 92, 246, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  transform: translateY(-1px);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Responsive Design */
@media (max-width: 768px) {
  .explorerContent {
    padding: var(--space-sm);
    gap: var(--space-xs);
  }
  
  .chartContainer {
    min-height: 300px;
    max-height: 50vh;
  }
  
  .analysisContainer {
    min-height: 250px;
  }
  
  .emptyState {
    padding: var(--space-lg);
    max-width: 320px;
  }
  
  .emptyIcon {
    width: 48px;
    height: 48px;
    margin-bottom: var(--space-md);
  }
  
  .emptyTitle {
    font-size: var(--font-size-md);
  }
  
  .emptyDescription {
    font-size: var(--font-size-sm);
  }
}

@media (max-width: 480px) {
  .chartContainer {
    min-height: 250px;
    max-height: 40vh;
  }
  
  .analysisContainer {
    min-height: 200px;
  }
}

/* Advanced Analytics Section Styles */
.advancedAnalyticsContainer {
  margin-bottom: var(--space-md);
  background: linear-gradient(145deg, rgba(30, 30, 50, 0.95), rgba(20, 20, 40, 0.9));
  border: 2px solid transparent;
  backdrop-filter: blur(20px);
  border-radius: var(--border-radius-lg);
  overflow: hidden;
  position: relative;
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.4),
    0 2px 8px rgba(0, 0, 0, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.advancedAnalyticsContainer::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    145deg,
    rgba(139, 92, 246, 0.1) 0%,
    rgba(59, 130, 246, 0.05) 35%,
    rgba(236, 72, 153, 0.05) 65%,
    rgba(245, 158, 11, 0.1) 100%
  );
  border-radius: inherit;
  pointer-events: none;
  z-index: -1;
}

.advancedAnalyticsHeader {
  padding: var(--space-md);
  background: rgba(139, 92, 246, 0.1);
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.advancedAnalyticsHeader h3 {
  margin: 0;
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  background: linear-gradient(45deg, 
    hsl(260, 70%, 75%), 
    hsl(280, 70%, 85%),
    hsl(240, 70%, 80%)
  );
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 2px 4px rgba(139, 92, 246, 0.3);
}

.advancedAnalyticsContent {
  padding: var(--space-md);
}

.analyticsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: var(--space-md);
  margin-bottom: var(--space-md);
}

.analyticsCard {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.08) 0%,
    rgba(255, 255, 255, 0.02) 100%
  );
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--border-radius-md);
  padding: var(--space-md);
  backdrop-filter: blur(10px);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.analyticsCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, 
    hsl(260, 70%, 60%),
    hsl(280, 70%, 70%),
    hsl(240, 70%, 65%)
  );
  opacity: 0.6;
}

.analyticsCard:hover {
  transform: translateY(-4px) scale(1.02);
  border-color: rgba(139, 92, 246, 0.3);
  box-shadow: 
    0 12px 32px rgba(0, 0, 0, 0.3),
    0 4px 16px rgba(139, 92, 246, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
}

.analyticsCard h4 {
  margin: 0 0 var(--space-sm) 0;
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  display: flex;
  align-items: center;
  gap: var(--space-xs);
}

.statItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--space-xs) 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  font-family: var(--font-family-primary);
  font-size: var(--font-size-sm);
}

.statItem:last-child {
  border-bottom: none;
}

.statItem span:first-child {
  color: var(--color-text-secondary);
  font-weight: var(--font-weight-medium);
}

.statItem span:last-child {
  color: var(--color-text-primary);
  font-weight: var(--font-weight-semibold);
  font-family: var(--font-family-mono);
  background: rgba(139, 92, 246, 0.1);
  padding: 2px 6px;
  border-radius: var(--border-radius-sm);
  border: 1px solid rgba(139, 92, 246, 0.2);
}

/* Responsive design for analytics cards */
@media (max-width: 768px) {
  .analyticsGrid {
    grid-template-columns: 1fr;
    gap: var(--space-sm);
  }
  
  .analyticsCard {
    padding: var(--space-sm);
  }
  
  .advancedAnalyticsHeader {
    padding: var(--space-sm);
  }
  
  .advancedAnalyticsHeader h3 {
    font-size: var(--font-size-md);
  }
}

.dualChartsContainer {
  flex: 1;
  display: flex;
  flex-direction: row;
  gap: var(--space-md);
  min-height: 0;
}

.dualChartsContainer .chartContainer {
  flex: 1;
  min-width: 0;
}

/* Export button content styling */
.exportButtonContent {
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  position: relative;
  z-index: 1;
}

.exportButtonText {
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-medium);
  white-space: nowrap;
}

.exportButtonContent svg {
  width: 16px;
  height: 16px;
  flex-shrink: 0;
}


.exportButtonWrapper {
  position: relative;
  display: inline-flex;
}

.exportMenu {
  position: absolute;
  width: 220px;
  padding: var(--space-sm) var(--space-md);
  border-radius: var(--border-radius);
  background: var(--popover-surface);
  border: var(--border-width) solid var(--popover-border);
  box-shadow: var(--elevation-popover);
  z-index: var(--z-popover);
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
  color: var(--color-text-secondary);
  pointer-events: auto;
}

.exportMenuBackdrop {
  position: fixed;
  inset: 0;
  background: rgba(15, 23, 42, 0.45);
  backdrop-filter: blur(2px);
  z-index: calc(var(--z-popover) - 1);
}

.exportMenuHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--space-xs);
  font-family: var(--font-family);
}

.exportMenuHeaderText span {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
}

.exportMenuClose {
  background: transparent;
  border: none;
  color: var(--icon-color-normal);
  border-radius: 999px;
  width: 24px;
  height: 24px;
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-semibold);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: color var(--transition-fast), transform var(--transition-fast);
}

.exportMenuClose:hover {
  color: var(--icon-color-strong);
  transform: translateY(-1px);
}

.exportMenuSection {
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
  padding-top: var(--space-xs);
}

.exportMenuLabel {
  font-size: var(--font-size-2xs);
  font-weight: var(--font-weight-semibold);
  text-transform: uppercase;
  letter-spacing: var(--letter-spacing-wider);
  color: var(--color-text-muted);
}

.exportModeList {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.exportModeOption {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  padding: 8px 10px;
  border-radius: calc(var(--border-radius) * 0.8);
  border: var(--border-width) solid transparent;
  background: rgba(255, 255, 255, 0.025);
  color: inherit;
  cursor: pointer;
  text-align: left;
  font-size: var(--font-size-sm);
  transition: background var(--transition-fast), border var(--transition-fast), color var(--transition-fast);
}

.exportModeOption:hover {
  background: rgba(139, 92, 246, 0.08);
  border-color: rgba(139, 92, 246, 0.25);
  color: var(--color-text-primary);
}

.exportModeOptionActive {
  border-color: var(--color-accent-secondary);
  background: rgba(6, 182, 212, 0.16);
  color: var(--color-text-primary);
}

.exportModeSwatch {
  width: 14px;
  height: 14px;
  border-radius: 999px;
  position: relative;
  flex-shrink: 0;
  box-shadow: inset 0 0 0 1px rgba(15, 23, 42, 0.35);
}

.exportModeOption[data-mode="transparent"] .exportModeSwatch {
  border: 1px dashed var(--color-border);
  background-image:
    linear-gradient(135deg, rgba(226, 232, 240, 0.65), rgba(148, 163, 184, 0.25)),
    linear-gradient(45deg, rgba(148, 163, 184, 0.3) 25%, transparent 25%, transparent 50%, rgba(148, 163, 184, 0.3) 50%, rgba(148, 163, 184, 0.3) 75%, transparent 75%, transparent);
  background-size: 100% 100%, 6px 6px;
}

.exportModeOption[data-mode="light"] .exportModeSwatch {
  border: 1px solid rgba(148, 163, 184, 0.45);
  background: linear-gradient(135deg, rgba(248, 250, 252, 0.96), rgba(226, 232, 240, 0.92));
}

.exportModeOption[data-mode="dark"] .exportModeSwatch {
  border: 1px solid rgba(6, 182, 212, 0.45);
  background: linear-gradient(135deg, rgba(15, 23, 42, 0.95), rgba(30, 41, 59, 0.88));
}

.exportModeLabel {
  line-height: 1.3;
}

.exportMenuFooter {
  display: flex;
  justify-content: flex-end;
}

.exportMenuAction {
  border-radius: calc(var(--border-radius) * 0.75);
  padding: 6px 14px;
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-semibold);
  cursor: pointer;
  border: none;
  color: var(--color-text-primary);
  background: var(--color-accent-primary);
  transition: transform var(--transition-fast), box-shadow var(--transition-fast), background var(--transition-fast);
  box-shadow: 0 10px 22px rgba(139, 92, 246, 0.25);
}

.exportMenuAction:disabled {
  cursor: not-allowed;
  opacity: 0.55;
  box-shadow: none;
}

.exportMenuAction:not(:disabled):hover {
  transform: translateY(-1px);
  background: var(--color-accent-primary-hover);
  box-shadow: 0 12px 26px rgba(139, 92, 246, 0.35);
}



/* Simplified hover effects - no shimmer animation */
